apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
  namespace: bookstore
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bookstore-grafana
  namespace: bookstore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookstore-grafana
  template:
    metadata:
      labels:
        app: bookstore-grafana
    spec:
      initContainers:
      - name: init-dashboards-dir
        image: busybox
        command: ['sh', '-c', 'mkdir -p /var/lib/grafana/dashboards && chmod -R 777 /var/lib/grafana/']
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
      containers:
      - name: grafana
        image: datfan06/graphana:latest
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 150m
            memory: 256Mi
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: dashboard-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: datasource-config
          mountPath: /etc/grafana/provisioning/datasources
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: dashboard-config
        configMap:
          name: grafana-dashboard-config
      - name: datasource-config
        configMap:
          name: grafana-datasource-config

---
apiVersion: v1
kind: Service
metadata:
  name: bookstore-grafana
  namespace: bookstore
spec:
  type: NodePort
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30011
  selector:
    app: bookstore-grafana 